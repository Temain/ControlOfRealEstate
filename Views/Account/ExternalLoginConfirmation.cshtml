@model ExternalLoginConfirmationViewModel
@{
    ViewData["Title"] = "Регистрация";
}

<div class="ui raised very padded text container" style="margin-top: 10em;">
    <h2 class="ui header">@ViewData["Title"]</h2>
    <h3 class="ui sub header">Привязка вашего @ViewData["LoginProvider"] аккаунта</h3>

    <form asp-controller="Account" asp-action="ExternalLoginConfirmation" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="ui small form validate-me" role="form">
        <p class="content">
            Вы успешно вошли с помощью <strong>@ViewData["LoginProvider"]</strong>.
            Пожалуйста, укажите имя пользователя и адрес электронной почты для завершения процесса регистрации в системе.
            @*Please enter a user name for this site below and click the Register button to finish
                logging in.*@
        </p>

        @if (!string.IsNullOrEmpty(Model.DisplayName))
        {
            <div class="six wide field">
                <input type="hidden" asp-for="DisplayName" />
                <strong>@Model.DisplayName</strong>
            </div>
        }

        <div class="six wide field">
            <div class="ui left icon input">
                <i class="user icon"></i>
                <input asp-for="UserName" placeholder="Имя пользователя" />
                <div asp-validation-for="LoginModel.UserName"></div>
            </div>
        </div>
        <div class="six wide field">
            <div class="ui left icon input">
                <i class="mail icon"></i>
                <input asp-for="Email" placeholder="Адрес электронной почты" />
                <div asp-validation-for="LoginModel.Email"></div>
            </div>
        </div>
        <br />
        <input type="submit" class="ui large blue submit button" value="Отправить" />
        <br />
        <div asp-validation-summary="All" class="ui error message"></div>
    </form>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
